// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Angular.Templates.Core.Index
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.Html.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class IndexTemplate : HtmlTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Title));
            
            #line default
            #line hidden
            this.Write("</title>\n  <base href=\"/\">\n  <meta name=\"viewport\" content=\"width=device-width, i" +
                    "nitial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"
  foreach (var link in _headerLinks.OrderBy(x => x.Relationship != "preconnect")) {
        if (link.Relationship == "preconnect") {

            
            #line default
            #line hidden
            this.Write("  <link rel=\"preconnect\" href=\"");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(link.Href));
            
            #line default
            #line hidden
            this.Write("\">\n");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"

        } else {

            
            #line default
            #line hidden
            this.Write("  <link href=\"");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(link.Href));
            
            #line default
            #line hidden
            this.Write("\" rel=\"");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(link.Relationship));
            
            #line default
            #line hidden
            this.Write("\">\n");
            
            #line 1 "C:\Dev\Intent.Modules.Web\Modules\Intent.Modules.Angular\Templates\Core\Index\IndexTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("</head>\n<body>\n<app-root></app-root>\n</body>\n</html>\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
