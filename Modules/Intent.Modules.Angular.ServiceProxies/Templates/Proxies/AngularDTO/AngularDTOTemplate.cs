//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:7.0.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intent.Modules.Angular.ServiceProxies.Templates.Proxies.AngularDTO {
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.TypeScript.Templates;
    using Intent.Metadata.Models;
    using Intent.Modelers.Types.ServiceProxies.Api;
    using System;
    
    
    public partial class AngularDTOTemplate : TypeScriptTemplateBase<Intent.Modelers.Services.Api.DTOModel> {
        
        public override string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 10 ""
            this.Write("\r\nexport interface ");
            
            #line default
            #line hidden
            
            #line 11 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 11 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GenericTypes ));
            
            #line default
            #line hidden
            
            #line 11 ""
            this.Write(" {\r\n");
            
            #line default
            #line hidden
            
            #line 12 ""
  foreach (var field in Model.Fields) { 
            
            #line default
            #line hidden
            
            #line 13 ""
            this.Write("    ");
            
            #line default
            #line hidden
            
            #line 13 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToCamelCase()));
            
            #line default
            #line hidden
            
            #line 13 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( field.TypeReference.IsNullable ? "?" : "" ));
            
            #line default
            #line hidden
            
            #line 13 ""
            this.Write(": ");
            
            #line default
            #line hidden
            
            #line 13 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( this.GetTypeName(field.TypeReference) ));
            
            #line default
            #line hidden
            
            #line 13 ""
            this.Write(";\r\n");
            
            #line default
            #line hidden
            
            #line 14 ""
  } 
            
            #line default
            #line hidden
            
            #line 15 ""
            this.Write("}\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public override void Initialize() {
            base.Initialize();
        }
    }
}
