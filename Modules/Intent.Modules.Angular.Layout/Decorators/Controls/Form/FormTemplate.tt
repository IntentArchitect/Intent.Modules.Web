<#@ template language="C#" inherits="T4TemplateBase" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Angular.Layout.Decorators.Controls.Section" #>
<form [formGroup]="<#= Model.DataModelPath #>" intent-manage intent-id="<#= Model.Name.Replace(" ", "").ToKebabCase() #>">
<#  foreach(var field in Model.FormFields) { #>
<#      if (field.TypeReference.Element.Name == "Text Input") { #>
  <div class="form-group" intent-id="<#= field.Id #>">
    <label for="<#= field.DataModelPath #>"><#= field.Name #></label>
    <input id="<#= field.DataModelPath #>" class="form-control" formControlName="<#= field.DataModelPath #>" type="text" />
  </div>
<#      } else if (field.TypeReference.Element.Name == "Checkbox") { #>
  <div class="form-check" intent-id="<#= field.Id #>">
    <input id="<#= field.DataModelPath #>" class="form-check-input" formControlName="<#= field.DataModelPath #>" type="checkbox" />
    <label for="<#= field.DataModelPath #>" class="form-check-label"><#= field.Name #></label>
  </div>
<#      } else if (field.TypeReference.Element.Name == "Datepicker") { #>
  <div class="form-group" intent-id="<#= field.Id #>">
    <label for="<#= field.DataModelPath #>"><#= field.Name #></label>
    <input id="<#= field.DataModelPath #>" class="form-control" formControlName="<#= field.DataModelPath #>" type="text" bsDatepicker="" />
  </div>
<#      } else if (field.TypeReference.Element.Name == "Select") { #>
  <div class="form-group" intent-id="<#= field.Id #>">
    <label for="<#= field.DataModelPath #>"><#= field.Name #></label>
    <mat-select id="<#= field.DataModelPath #>" class="form-control" formControlName="<#= field.DataModelPath #>" type="text">
      <mat-option *ngFor="let option of <#= GetSelectItemsModel(field) #>" [value]="option.<#= GetSelectValueField(field) #>">
        {{ option.<#= GetSelectTextField(field) #> }}
      </mat-option>
    </mat-select>
  </div>
<#      } else if (field.TypeReference.Element.Name == "Multi-Select") { #>
  <div class="form-group" intent-id="<#= field.Id #>">
    <label for="<#= field.DataModelPath #>"><#= field.Name #></label>
    <mat-select id="<#= field.DataModelPath #>" class="form-control" formControlName="<#= field.DataModelPath #>" type="text" multiple="">
      <mat-option *ngFor="let option of <#= GetSelectItemsModel(field) #>" [value]="option.<#= GetSelectValueField(field) #>">
        {{ option.<#= GetSelectTextField(field) #> }}
      </mat-option>
    </mat-select>
  </div>
<#      } else if (field.TypeReference.Element.Name == "Custom") { #>
  <div class="form-group" intent-id="<#= field.Id #>" intent-ignore>
    <label for="<#= field.DataModelPath #>"><#= field.Name #></label>
    <input id="<#= field.DataModelPath #>" class="form-control" formControlName="<#= field.DataModelPath #>" type="text" />
  </div>
<#      } #>
<#  } #>
<#= ControlWriter.WriteControls(Model.Sections.Select(x => x.InternalElement), "  ") #>
</form>
